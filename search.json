[{"title":"git常用命令","date":"2023-06-14T02:46:38.000Z","url":"/2023/06/14/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","tags":[["git","/tags/git/"]],"categories":[["undefined",""]],"content":" 简介Git是分布式版本控制系统 分布式版本控制系统，重点在于分布。分布的含义不是说每台计算机上只留有版本库的一部分。恰恰相反，分布的含义是每台计算机上都还有一个完整的版本库。这个时候，你的修改仅仅需要提交给本地的版本库进行保存就可以了。 不同于集中式版本控制系统的“中央服务器”，分布式版本控制系统可以通过推送版本库，实现不同的计算机之间的版本共享。什么意思呢？就是说对于同一个文件A，如果两个人同时对A文件进行了修改，最新的版本应该都保存在各自的计算机中，想要实现协同开发，只需要将各自的最新版本库推送给对方，就可以得到最新的版本库了。 但是这里面有个问题，就是一个团队很大的情况下，大家都去修改，到底找谁同步版本库，不乱套了嘛。而且，大的开发项目也不是简单的两台计算机之间的版本互推就可以得到完整的版本库的。所以，分布式版本控制系统中通常也会有一台充当“中央服务器”的计算机，大家都把版本推送到这台计算机上，而需要同步的人只需同步这一台固定的计算机就可以。 所谓的分布式管理中的“中央服务器”是用来“交换意见”，或者说充当中介作用的。每一台计算机通过和这台固定的中介交换意见以后，都会拥有完整的版本库。 Windows安装Gitwindows上使用Git，可以从Git官网下载安装程序，默认安装。安装完成后找到Git Bash完成下列设置 Git是分布式版本控制系统，所以每个机器都需自报家门。 常用基本命令 git init 建立版本库 git add 把要提交的东西添加到暂存区。commit时将会把暂存区的内容提交。 git commit 把暂存区的所有内容提交到当前分支。 git branch 操作Git分支的命令 git clone 克隆远程存储库到本地（克隆的是整个远程库） git config 用来配置Git的相关参数 Git三个配置文件 仓库级的配置文件：在仓库的 .git&#x2F;.gitconfig，该配置文件只对所在的仓库有效。 全局配置文件：Mac 系统在 ~&#x2F;.gitconfig，Windows 系统在 C:\\Users&lt;用户名&gt;.gitconfig。 系统级的配置文件：在 Git 的安装目录下（Mac 系统下安装目录在 &#x2F;usr&#x2F;local&#x2F;git）的 etc 文件夹中的 gitconfig。 git fetch 更新本地仓库 git log git merge 分支合并 git mv git pull 从远程仓库获取最新版本并合并到本地。 首先会执行 git fetch，然后执行 git merge，把获取的分支的 HEAD 合并到当前分支。 git push 把本地仓库的提交推送到远程仓库。 git remote 操作远程库。 git tag 操作标签的命令。 "},{"title":"Hello World","date":"2023-06-14T01:58:36.733Z","url":"/2023/06/14/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]